%% Parabolic Emuluations in Two-Space Dimensions %%
%------------------------------------------------------------------------%
%-----------------------------2020.09.17.THU-----------------------------%
%-----------------------------CFD Lab Seminar----------------------------%
%@Author : Lee Yerang----------------------------------------------------%
%@Ref : Hoffmann CFD-----------------------------------------------------%
%@chapter 3, 3.7 Parabolic Emuluations in Two-Space Dimension--------------%
%------------------------------------------------------------------------%


clc; clear all;


%% Initial Conditions
b = 3.5;        % the length of cross-sectional dimensions [ft] -> X-direction
h = 3.5;        % the width of cross-sectional dimensions [ft]  -> Y-direction
dx = 0.5;       % the intervals in X-dir(b) [ft]
dy = 0.5;       % the intervals in Y-dir(h) [ft]

m = b/dx;       % the number of nodes in X-dir
n = b/dy;       % the number of nodes in Y-dir
mul = (m-2)*(n-2);

T1 = 200.00;    % the Temperature of Down-side
T2 = 200.00;    % the Temperature of Left-side
T3 = 0.0;       % the Temperature of Up-side
T4 = 0.0;       % the Temperature of Right-side

alpha = 0.645;  % the Thermal diffusivity [ft^2/hr]

t = 1;
dt = 0.01;
timenum = t/dt;


d1 = (0.5*alpha*dt)/(dx^2);
d2 = (0.5*alpha*dt)/(dy^2);



%% Calculation
T = zeros(m, n);

for i = 1:m     % Down-side
    T(i, 1) = T1;
end
for i = 1:n     % Left-side
    T(1, i) = T2;
end

a1 = -d1;
b1 = 1 + 2*d1;
c1 = -d1;
a2 = -d2;
b2 = 1 + 2*d2;
c2 = -d2;

D1 = zeros;
D2 = zeros;

for I = 1:timenum
    iter = 0;
    for j = 2:n-1
        for i = 2:m-1
            iter = iter + 1;
            D1(iter,1) = d2*T(i,j+1) + (1-2*d2)*T(i,j) + d2*T(i,j-1);
            D1(iter,1) = d2*T(2,j+1) + (1-2*d2)*T(2,j) + d2*T(2,j-1) + d1*T(1,j);
            D1(iter,1) = d2*T(m,j+1) + (1-2*d2)*T(m,j) + d2*T(m,j-1) + d1*T(m,j);
        end
        A = zeros(mul, mul);
        for i = 1:mul
            A(i,i) = b1;
        end
        for i = i:mul-1
            A(i,i+1) = a1;
        end
        for i = 2:mul
            A(i,i-1) = c1;
        end
        
        MA = zeros(mul,mul);
        MB = zeros(mul,1);
        MA(1,1) = A(1,1);
        MB(1,1) = D1(1,1);
        for i = 2:mul
            MA(i,i) = A(i,i) - A(i,i-1)*A(i-1,i)/MA(i-1,i-1);
            MB(i,1) = D1(i,1) - MB(i-1,1)*A(i,i-1)/MA(i-1,i-1);
        end
        for i = 1:(mul-1)
            MA(i,i+1) = A(i,i+1);
        end
        
        
        C = zeros(mul,1);
        for i = mul : -1 : 1
            if i == mul
                C(i,1) = MB(i,1)/MA(i,i);
            end
            if i < mul
                C(i,1) = MB(i,1) - MA(i,i+1)*C(i+1,1)/MA(i,i);
            end
        end
        y = 0;
        for i = (m-1) : -1 : 2
            for j = 2:(n-1)
                y = y+1;
                w(i,j) = C(y,1);
            end
        end
        
        
        D1 = zeros(mul,1);
        z = 0;
        for j = 2 : (n-1)
            for i = (m-1) : -1 : 2
                z = z+1;
                D1(z,1)= lamda1*w(i,j-1) + (1 - 2*lamda1)*w(i,j) + lamda1*w(i,j-1);
                if i == 2
                    D1(z,1) = lamda2*w(i-1,j);
                end
                if i == (m-1)
                    D1(z,1) = lamda2*w(i+1,j);
                end
            end
        end
        
        A = zeros(mul,mul);
        for i = 1:mul
            A(i,i) = b2;
        end
        for i = 1:(mul-1)
            A(i,i+1) = a2;
            r = rem(i,o);
            if r == 0
                A(i,i+1) = 0;
            end
        end
        for i = 2:mul
            A(i,i-1) = c2;
        end
        for i = 2:(mul-1)
            r = rem(i,o);
            if r == 0
                A(i+1,i) = 0;
            end
        end
        MA = zeros(mul,mul);
        MB = zeros(mul,1);
        MA(1,1) = A(1,1);
        MB(1,1) = D1(1,1);
        for i = 2:mul
            MA(i,i) = A(i,i) - A(i,i-1)*A(i-1,i)/MA(i-1,i-1) ;
            MB(i,1) = D1(i,1) - MB(i-1,1)*A(i,i-1)/MA(i-1,i-1) ;
        end
        for i = 1:(mul-1)
            MA(i,i+1) = A(i,i+1);
        end
        
        C = zeros(mul,1);
        for i = mul : -1 : 1
            if i == mul
                C(i,1) = MB(i,1)/MA(i,i);
            end
            if i < mul
                C(i,1) = MB(i,1) - MA(i,i+1)*C(i+1,1)/MA(i,i);
            end
        end
        
        y = 0;
        for j = 2:(n-1)
            for i = (m-1) : -1 : 2
                y = y+1;
                w(i,j) = C(y,1);
            end
        end
        
        
        
    end
end

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
